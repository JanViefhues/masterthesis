before.dataset.summary <- summaryStatistics(before.dataset)
during.dataset.summary <- summaryStatistics(during.dataset)
after.dataset.summary <- summaryStatistics(after.dataset)
print(before.dataset.summary)
print(during.dataset.summary)
print(after.dataset.summary)
# ----------------------------------------------------------
# ---------------- CO2 -------------------------------------
# ----------------------------------------------------------
print(before.dataset.summary)
hist(before.dataset$CO2)
print(during.dataset.summary)
hist(during.dataset$CO2)
print(after.dataset.summary)
print(total.dataset.summary)
hist(after.dataset$CO2)
ggplot(total.dataset, aes(x=periode, y=CO2, fill=periode)) + geom_boxplot()
# Check statistic differenceof CO2 in the datasets
welchs_anova_training_CO2 <- oneway.test(CO2 ~ periode, data = total.dataset, var.equal = FALSE)
welchs_anova_training_CO2
# Is significant so we can the recject the H0 meaning the means are not equal
# Games-Howell post-hoc test
gamesHowell.CO2 <- oneway(total.dataset$periode, y = total.dataset$mine_water_level, posthoc = 'games-howell')
gamesHowell.CO2
View(total.dataset)
# Is significant. The differences make intuitive sense as judging from the boxplot
# it can be seen that these groups distributed quite differently from each other.
# ------ Count the numbers of leakage events ----------------
before.dataset = before.dataset[complete.cases(before.dataset),]
dangerous_CO2_counter_before <- 0
for (val in before.dataset$dangerousCo2){
if (val == 1){
dangerous_CO2_counter_before <- dangerous_CO2_counter_before + 1
}
}
during.dataset = during.dataset[complete.cases(during.dataset),]
dangerous_CO2_counter_during <- 0
for (val in during.dataset$dangerousCo2){
if (val == 1){
dangerous_CO2_counter_during <- dangerous_CO2_counter_during + 1
}
}
after.dataset = after.dataset[complete.cases(after.dataset),]
dangerous_CO2_counter_after <- 0
for (val in after.dataset$dangerousCo2){
if (val == 1){
dangerous_CO2_counter_after <- dangerous_CO2_counter_after + 1
}
}
total.dataset = total.dataset[complete.cases(total.dataset),]
dangerous_CO2_counter_total <- 0
for (val in total.dataset$dangerousCo2){
if (val == 1){
dangerous_CO2_counter_total <- dangerous_CO2_counter_total + 1
}
}
print(dangerous_CO2_counter_before)
print(dangerous_CO2_counter_during)
print(dangerous_CO2_counter_after)
print(dangerous_CO2_counter_total)
# Test for random chance in leakage
# -------- Create rations from total / leakage --------------
len_before.dataset <- length(before.dataset$Date)
len_during.dataset <- length(during.dataset$Date)
len_after.dataset <- length(after.dataset$Date)
len_total.dataset <- length(total.dataset$Date)
print(len_before.dataset/dangerous_CO2_counter_before)
print(len_after.dataset)
leakage.ration.before <- dangerous_CO2_counter_before/ len_before.dataset *100
leakage.ration.during <- dangerous_CO2_counter_during/ len_during.dataset *100
leakage.ration.after <- dangerous_CO2_counter_during/ len_after.dataset *100
leakage.ration.total <- dangerous_CO2_counter_total/ len_total.dataset *100
leakage_per_day.before <- dangerous_CO2_counter_before/(len_before.dataset/24)
leakage_per_day.during <- dangerous_CO2_counter_during/(len_during.dataset/24)
leakage_per_day.after <- dangerous_CO2_counter_after/(len_after.dataset/24)
print(leakage_per_day.before)
print(leakage_per_day.during)
print(leakage_per_day.after)
print(leakage.ration.before)
print(leakage.ration.during)
print(leakage.ration.after)
print(leakage.ration.total)
# ----------------------------------------------------------
# ---------------- Humidity --------------------------------
# ----------------------------------------------------------
hist(before.dataset$Humidity)
hist(during.dataset$Humidity)
hist(after.dataset$Humidity)
ggplot(total.dataset, aes(x=periode, y=Humidity, fill=periode)) + geom_boxplot()
welchs_anova_training_Humidity <- oneway.test(Humidity ~ periode, data = total.dataset, var.equal = FALSE)
welchs_anova_training_Humidity
# !!! Games-Howell post-hoc test
gamesHowell.Humidity <- oneway(total.dataset$periode, y = total.dataset$Humidity, posthoc = 'games-howell')
gamesHowell.Humidity
# The differences make intuitive sense as judging from the boxplot it can be seen that these groups distributed quite differently from each other.
# To indicate the skew in humidity between the groups, we reduce the skale
# and compare the data on a one week base
total.datset.xts <- xts::as.xts(total.dataset, order.by = lubridate::as_datetime(x = total.dataset$Date,tz = "Europe/Amsterdam"))
total.dataset.1.Week.before <- total.datset.xts["2021-06-11/2021-06-18"]
total.dataset.1.Week.during <- total.datset.xts["2021-06-19/2021-06-25"]
total.dataset.1.Week.after <- total.datset.xts["2021-07-16/2021-07-23"]
total.dataset.oneWeekEach <- rbind(total.dataset.1.Week.before, total.dataset.1.Week.during, total.dataset.1.Week.after)
total.dataset.oneWeekEach<- as.data.frame(total.dataset.oneWeekEach)
total.dataset.oneWeekEach$Humidity <- as.numeric(total.dataset.oneWeekEach$Humidity)
total.dataset.oneWeekEach$CO2 <- as.numeric(total.dataset.oneWeekEach$CO2)
# Multiple histograms on the same plot
# TOTAL DATASET
ggplot2.histogram(data=total.dataset, xName='Humidity',
groupName='periode', legendPosition="top")
ggplot2.histogram(data=total.dataset, xName='Humidity',
groupName='periode', legendPosition="top",
alpha=0.5 )
ggplot2.histogram(data=total.dataset, xName='Humidity',
groupName='periode', legendPosition="top",
alpha=0.5,
meanLineColor="white", meanLineSize=1.5)
# TOTAL DATASET ONE WEEK
ggplot2.histogram(data=total.dataset.oneWeekEach, xName='Humidity',
groupName='periode', legendPosition="top")
ggplot2.histogram(data=total.dataset.oneWeekEach, xName='Humidity',
groupName='periode', legendPosition="top",
alpha=0.5 )
ggplot2.histogram(data=total.dataset.oneWeekEach, xName='Humidity',
groupName='periode', legendPosition="top",
alpha=0.5,
meanLineColor="white", meanLineSize=1.5)
# Plot
# TODO: Add colors
total.dataset.oneWeekEach$Date <- lubridate::as_datetime(x = total.dataset.oneWeekEach$Date,tz = "Europe/Amsterdam")
ggplot(total.dataset.oneWeekEach, aes(x=Date, y=Humidity)) +
geom_line()
# Result
# From the describes we can see, that the mean of CO2 is much higher in the
# periode during and after the flooding. Also, the humidity increase. This
# makes perfect sense, since the heavy raining increase the overall outside humidity.
# This effect gives confidence that the data set is accurate.
# -----------------------------------------------------------
# ---- DESCRIBE PM 10 & 25 ----------------------------------
# -----------------------------------------------------------
gamesHowell.pm10 <- oneway(total.dataset$periode, y = total.dataset$PM10, posthoc = 'games-howell')
gamesHowell.pm10
gamesHowell.pm25 <- oneway(total.dataset$periode, y = total.dataset$PM25, posthoc = 'games-howell')
gamesHowell.pm25
ggplot(total.dataset, aes(x=periode, y=PM25, fill=periode)) + geom_boxplot()
ggplot(total.dataset, aes(x=periode, y=PM10, fill=periode)) + geom_boxplot()
# -----------------------------------------------------------
# ---- DESCRIBE PRESSURE - ----------------------------------
# -----------------------------------------------------------
gamesHowell.pressure <- oneway(total.dataset$periode, y = total.dataset$Pressure, posthoc = 'games-howell')
gamesHowell.pressure
ggplot(total.dataset, aes(x=periode, y=Pressure, fill=periode)) + geom_boxplot()
hist(before.dataset$Pressure)
hist(during.dataset$Pressure)
hist(after.dataset$Pressure)
# TODO: Pressure vs CO2 Plot
# -----------------------------------------------------------
# ---- DESCRIBE Percipitation -------------------------------
# -----------------------------------------------------------
gamesHowell.precipitation <- oneway(total.dataset$periode, y = total.dataset$Precipitation, posthoc = 'games-howell')
gamesHowell.precipitation
ggplot(total.dataset, aes(x=periode, y=Precipitation, fill=periode)) + geom_boxplot()
# Draw percipitation vs CO2 in line chart tablau
# -----------------------------------------------------------
# ---- DESCRIBE Rhine Water Level ---------------------------
# -----------------------------------------------------------
# Use this command to reset the ggplot 2 due to early messup
dev.off()
ggplot(total.dataset, aes(x=periode, y=RhineWaterLevel, fill=periode)) + geom_boxplot()
gamesHowell.rhineWaterLevel <- oneway(total.dataset$periode, y = total.dataset$RhineWaterLevel, posthoc = 'games-howell')
gamesHowell.rhineWaterLevel
# ----------------------------------------------------------
# -----------    Correlation matrix   ----------------------
before.dataset.without_date <- before.dataset[, !names(before.dataset) %in% c("Date", "X")]
during.dataset.without_date <- during.dataset[, !names(during.dataset) %in% c("Date", "X")]
after.dataset.without_date <- after.dataset[, !names(after.dataset) %in% c("Date", "X")]
total.dataset.without_date <- total.dataset[, !names(total.dataset) %in% c("Date", "X")]
head(before.dataset.without_date)
# Check for normality assumption for Pearson matrix
# With RHINE WATER
fit <- lm(CO2 ~ Humidity + PM25 + PM10 + Temperature + Pressure + Precipitation +RhineWaterLevel ,before.dataset.without_date) #assign regression results to fit
# With MINE and GROUND WATER
fit <- lm(CO2 ~ Humidity + PM25 + PM10 + Temperature + Pressure + Precipitation +mine_water_level+ground_water_level,before.dataset.without_date) #assign regression results to fit
plot(fit, 1)
# There is no linear relationship between the independent variable and the other features
# Use Spearman rank-order correlation coefficient as the data is not normal
# With RHINE WATER
relevant.features <- c("CO2","PM25","PM10","Temperature", "Humidity", "Pressure","Precipitation","RhineWaterLevel")
total.dataset.correlation_matrix <- cor(total.dataset.without_date[relevant.features], y = NULL,
method = c("spearman"))
relevant.features <- c("CO2","PM25","PM10","Temperature", "Humidity", "Pressure","Precipitation","ground_water_level","mine_water_level")
total.dataset.correlation_matrix <- cor(total.dataset.without_date[relevant.features], y = NULL,
method = c("spearman"))
relevant.features <- c("CO2","PM25","PM10","Temperature", "Humidity", "Pressure","Precipitation","RhineWaterLevel")
total.dataset.correlation_matrix <- cor(total.dataset.without_date[relevant.features], y = NULL,
method = c("spearman"))
print(total.dataset.without_date)
total.dataset = read.csv(file="/Users/jan-philippviefhues/Desktop/UNI/Maastricht/um/Thesis/gitRepo/masterthesis/cleaned_data/total_dataset_with_precipitation_and_dummies_hourly.csv")
before.dataset <- read.csv(file = '/Users/jan-philippviefhues/Desktop/UNI/Maastricht/um/Thesis/data/datasets/cleaned_datasets/dataset.before.flooding_with_precipitation_and_dummies_dailyBase.csv')
during.dataset <- read.csv(file = '/Users/jan-philippviefhues/Desktop/UNI/Maastricht/um/Thesis/data/datasets/cleaned_datasets/dataset.during.flooding_with_precipitation_and_dummies_dailyBase.csv')
after.dataset <- read.csv(file = '/Users/jan-philippviefhues/Desktop/UNI/Maastricht/um/Thesis/data/datasets/cleaned_datasets/dataset.after.flooding_with_precipitation_and_dummies_dailyBase.csv')
View(after.dataset)
# ----------------------------------------------------------
# Check if the correct data is there
# THERE IS AN PROBLEM
before.dataset <- na.omit(before.dataset)
View(before.dataset)
# ----------------------------------------------------------
# --------- DESCRIPTIVE STATISTICS -------------------------
# ----------------------------------------------------------
# ----------------------------------------------------------
# -----------    Summary Statistics   ----------------------
summaryStatistics <- function(dataset){
x <- psych::describe(dataset[, !names(dataset) %in% c("flood","Date","X","HighWaterLevel","RhineWaterLevel","dangerousCo2","IsFloodingPeriode","HeavyRainIndicator","periode")], na.rm = TRUE)
x[, names(x) %in% c('vars', 'min', 'max', 'n', 'sd', 'median', 'mean', 'skew', 'kurtosis', 'range')]
}
total.dataset.summary <- summaryStatistics(total.dataset)
before.dataset.summary <- summaryStatistics(before.dataset)
during.dataset.summary <- summaryStatistics(during.dataset)
after.dataset.summary <- summaryStatistics(after.dataset)
print(before.dataset.summary)
print(during.dataset.summary)
print(after.dataset.summary)
# ----------------------------------------------------------
# ---------------- CO2 -------------------------------------
# ----------------------------------------------------------
print(before.dataset.summary)
hist(before.dataset$CO2)
print(during.dataset.summary)
hist(during.dataset$CO2)
print(after.dataset.summary)
print(total.dataset.summary)
hist(after.dataset$CO2)
ggplot(total.dataset, aes(x=periode, y=CO2, fill=periode)) + geom_boxplot()
# Check statistic differenceof CO2 in the datasets
welchs_anova_training_CO2 <- oneway.test(CO2 ~ periode, data = total.dataset, var.equal = FALSE)
welchs_anova_training_CO2
# Is significant so we can the recject the H0 meaning the means are not equal
# Games-Howell post-hoc test
gamesHowell.CO2 <- oneway(total.dataset$periode, y = total.dataset$mine_water_level, posthoc = 'games-howell')
gamesHowell.CO2
View(total.dataset)
# Is significant. The differences make intuitive sense as judging from the boxplot
# it can be seen that these groups distributed quite differently from each other.
# ------ Count the numbers of leakage events ----------------
before.dataset = before.dataset[complete.cases(before.dataset),]
dangerous_CO2_counter_before <- 0
for (val in before.dataset$dangerousCo2){
if (val == 1){
dangerous_CO2_counter_before <- dangerous_CO2_counter_before + 1
}
}
during.dataset = during.dataset[complete.cases(during.dataset),]
dangerous_CO2_counter_during <- 0
for (val in during.dataset$dangerousCo2){
if (val == 1){
dangerous_CO2_counter_during <- dangerous_CO2_counter_during + 1
}
}
after.dataset = after.dataset[complete.cases(after.dataset),]
dangerous_CO2_counter_after <- 0
for (val in after.dataset$dangerousCo2){
if (val == 1){
dangerous_CO2_counter_after <- dangerous_CO2_counter_after + 1
}
}
total.dataset = total.dataset[complete.cases(total.dataset),]
dangerous_CO2_counter_total <- 0
for (val in total.dataset$dangerousCo2){
if (val == 1){
dangerous_CO2_counter_total <- dangerous_CO2_counter_total + 1
}
}
print(dangerous_CO2_counter_before)
print(dangerous_CO2_counter_during)
print(dangerous_CO2_counter_after)
print(dangerous_CO2_counter_total)
# Test for random chance in leakage
# -------- Create rations from total / leakage --------------
len_before.dataset <- length(before.dataset$Date)
len_during.dataset <- length(during.dataset$Date)
len_after.dataset <- length(after.dataset$Date)
len_total.dataset <- length(total.dataset$Date)
print(len_before.dataset/dangerous_CO2_counter_before)
print(len_after.dataset)
leakage.ration.before <- dangerous_CO2_counter_before/ len_before.dataset *100
leakage.ration.during <- dangerous_CO2_counter_during/ len_during.dataset *100
leakage.ration.after <- dangerous_CO2_counter_during/ len_after.dataset *100
leakage.ration.total <- dangerous_CO2_counter_total/ len_total.dataset *100
leakage_per_day.before <- dangerous_CO2_counter_before/(len_before.dataset/24)
leakage_per_day.during <- dangerous_CO2_counter_during/(len_during.dataset/24)
leakage_per_day.after <- dangerous_CO2_counter_after/(len_after.dataset/24)
print(leakage_per_day.before)
print(leakage_per_day.during)
print(leakage_per_day.after)
print(leakage.ration.before)
print(leakage.ration.during)
print(leakage.ration.after)
print(leakage.ration.total)
# ----------------------------------------------------------
# ---------------- Humidity --------------------------------
# ----------------------------------------------------------
hist(before.dataset$Humidity)
hist(during.dataset$Humidity)
hist(after.dataset$Humidity)
ggplot(total.dataset, aes(x=periode, y=Humidity, fill=periode)) + geom_boxplot()
welchs_anova_training_Humidity <- oneway.test(Humidity ~ periode, data = total.dataset, var.equal = FALSE)
welchs_anova_training_Humidity
# !!! Games-Howell post-hoc test
gamesHowell.Humidity <- oneway(total.dataset$periode, y = total.dataset$Humidity, posthoc = 'games-howell')
gamesHowell.Humidity
# The differences make intuitive sense as judging from the boxplot it can be seen that these groups distributed quite differently from each other.
# To indicate the skew in humidity between the groups, we reduce the skale
# and compare the data on a one week base
total.datset.xts <- xts::as.xts(total.dataset, order.by = lubridate::as_datetime(x = total.dataset$Date,tz = "Europe/Amsterdam"))
total.dataset.1.Week.before <- total.datset.xts["2021-06-11/2021-06-18"]
total.dataset.1.Week.during <- total.datset.xts["2021-06-19/2021-06-25"]
total.dataset.1.Week.after <- total.datset.xts["2021-07-16/2021-07-23"]
total.dataset.oneWeekEach <- rbind(total.dataset.1.Week.before, total.dataset.1.Week.during, total.dataset.1.Week.after)
total.dataset.oneWeekEach<- as.data.frame(total.dataset.oneWeekEach)
total.dataset.oneWeekEach$Humidity <- as.numeric(total.dataset.oneWeekEach$Humidity)
total.dataset.oneWeekEach$CO2 <- as.numeric(total.dataset.oneWeekEach$CO2)
# Multiple histograms on the same plot
# TOTAL DATASET
ggplot2.histogram(data=total.dataset, xName='Humidity',
groupName='periode', legendPosition="top")
ggplot2.histogram(data=total.dataset, xName='Humidity',
groupName='periode', legendPosition="top",
alpha=0.5 )
ggplot2.histogram(data=total.dataset, xName='Humidity',
groupName='periode', legendPosition="top",
alpha=0.5,
meanLineColor="white", meanLineSize=1.5)
# TOTAL DATASET ONE WEEK
ggplot2.histogram(data=total.dataset.oneWeekEach, xName='Humidity',
groupName='periode', legendPosition="top")
ggplot2.histogram(data=total.dataset.oneWeekEach, xName='Humidity',
groupName='periode', legendPosition="top",
alpha=0.5 )
ggplot2.histogram(data=total.dataset.oneWeekEach, xName='Humidity',
groupName='periode', legendPosition="top",
alpha=0.5,
meanLineColor="white", meanLineSize=1.5)
# Plot
# TODO: Add colors
total.dataset.oneWeekEach$Date <- lubridate::as_datetime(x = total.dataset.oneWeekEach$Date,tz = "Europe/Amsterdam")
ggplot(total.dataset.oneWeekEach, aes(x=Date, y=Humidity)) +
geom_line()
# Result
# From the describes we can see, that the mean of CO2 is much higher in the
# periode during and after the flooding. Also, the humidity increase. This
# makes perfect sense, since the heavy raining increase the overall outside humidity.
# This effect gives confidence that the data set is accurate.
# -----------------------------------------------------------
# ---- DESCRIBE PM 10 & 25 ----------------------------------
# -----------------------------------------------------------
gamesHowell.pm10 <- oneway(total.dataset$periode, y = total.dataset$PM10, posthoc = 'games-howell')
gamesHowell.pm10
gamesHowell.pm25 <- oneway(total.dataset$periode, y = total.dataset$PM25, posthoc = 'games-howell')
gamesHowell.pm25
ggplot(total.dataset, aes(x=periode, y=PM25, fill=periode)) + geom_boxplot()
ggplot(total.dataset, aes(x=periode, y=PM10, fill=periode)) + geom_boxplot()
# -----------------------------------------------------------
# ---- DESCRIBE PRESSURE - ----------------------------------
# -----------------------------------------------------------
gamesHowell.pressure <- oneway(total.dataset$periode, y = total.dataset$Pressure, posthoc = 'games-howell')
gamesHowell.pressure
ggplot(total.dataset, aes(x=periode, y=Pressure, fill=periode)) + geom_boxplot()
hist(before.dataset$Pressure)
hist(during.dataset$Pressure)
hist(after.dataset$Pressure)
# TODO: Pressure vs CO2 Plot
# -----------------------------------------------------------
# ---- DESCRIBE Percipitation -------------------------------
# -----------------------------------------------------------
gamesHowell.precipitation <- oneway(total.dataset$periode, y = total.dataset$Precipitation, posthoc = 'games-howell')
gamesHowell.precipitation
ggplot(total.dataset, aes(x=periode, y=Precipitation, fill=periode)) + geom_boxplot()
# Draw percipitation vs CO2 in line chart tablau
# -----------------------------------------------------------
# ---- DESCRIBE Rhine Water Level ---------------------------
# -----------------------------------------------------------
# Use this command to reset the ggplot 2 due to early messup
dev.off()
ggplot(total.dataset, aes(x=periode, y=RhineWaterLevel, fill=periode)) + geom_boxplot()
gamesHowell.rhineWaterLevel <- oneway(total.dataset$periode, y = total.dataset$RhineWaterLevel, posthoc = 'games-howell')
gamesHowell.rhineWaterLevel
# ----------------------------------------------------------
# -----------    Correlation matrix   ----------------------
before.dataset.without_date <- before.dataset[, !names(before.dataset) %in% c("Date", "X")]
during.dataset.without_date <- during.dataset[, !names(during.dataset) %in% c("Date", "X")]
after.dataset.without_date <- after.dataset[, !names(after.dataset) %in% c("Date", "X")]
total.dataset.without_date <- total.dataset[, !names(total.dataset) %in% c("Date", "X")]
relevant.features <- c("CO2","PM25","PM10","Temperature", "Humidity", "Pressure","Precipitation","ground_water_level","mine_water_level")
total.dataset.correlation_matrix <- cor(total.dataset.without_date[relevant.features], y = NULL,
method = c("spearman"))
corrplot::corrplot(total.dataset.correlation_matrix, method = 'number')
before.dataset.correlation_matrix <- cor(before.dataset.without_date[relevant.features], y = NULL,
method = c("spearman"))
corrplot::corrplot(before.dataset.correlation_matrix, method = 'number')
relevant.features <- c("CO2","PM25","PM10","Temperature", "Humidity", "Pressure","Precipitation","ground_water_level","mine_water_level",'RhineWaterLevel')
before.dataset.correlation_matrix <- cor(before.dataset.without_date[relevant.features], y = NULL,
method = c("spearman"))
corrplot::corrplot(before.dataset.correlation_matrix, method = 'number')
relevant.features <- c("CO2","PM25","PM10","Temperature", "Humidity", "Pressure","Precipitation","RhineWaterLevel","Discharge","Stream_water_level","ground_water_level","mine_water_level")
before.dataset.correlation_matrix <- cor(before.dataset.without_date[relevant.features], y = NULL,
method = c("spearman"))
print(total.dataset.without_date)
relevant.features <- c("CO2","PM25","PM10","Temperature", "Humidity", "Pressure","Precipitation","RhineWaterLevel","Discharge","Stream_water_level","ground_water_level","mine_water_level")
total.dataset.correlation_matrix <- cor(total.dataset.without_date[relevant.features], y = NULL,
method = c("spearman"))
before.dataset.correlation_matrix <- cor(before.dataset.without_date[relevant.features], y = NULL,
method = c("spearman"))
Discharge
print(before.dataset.without_date)
print(before.dataset.without_date)
before.dataset <- read.csv(file = '/Users/jan-philippviefhues/Desktop/UNI/Maastricht/um/Thesis/data/datasets/cleaned_datasets/hourly_dataset.before.flooding_with_precipitation_and_dummies.csv')
during.dataset <- read.csv(file = '/Users/jan-philippviefhues/Desktop/UNI/Maastricht/um/Thesis/data/datasets/cleaned_datasets/hourly_dataset.during.flooding_with_precipitation_and_dummies.csv')
after.dataset <- read.csv(file = '/Users/jan-philippviefhues/Desktop/UNI/Maastricht/um/Thesis/data/datasets/cleaned_datasets/hourly_dataset.after.flooding_with_precipitation_and_dummies.csv')
View(before.dataset)
before.dataset <- read.csv(file = '/Users/jan-philippviefhues/Desktop/UNI/Maastricht/um/Thesis/data/datasets/cleaned_datasets/hourly_dataset.before.flooding_with_precipitation_and_dummies.csv')
during.dataset <- read.csv(file = '/Users/jan-philippviefhues/Desktop/UNI/Maastricht/um/Thesis/data/datasets/cleaned_datasets/hourly_dataset.during.flooding_with_precipitation_and_dummies.csv')
after.dataset <- read.csv(file = '/Users/jan-philippviefhues/Desktop/UNI/Maastricht/um/Thesis/data/datasets/cleaned_datasets/hourly_dataset.after.flooding_with_precipitation_and_dummies.csv')
before.dataset = before.dataset[complete.cases(before.dataset),]
during.dataset = during.dataset[complete.cases(during.dataset),]
after.dataset = after.dataset[complete.cases(after.dataset),]
total.dataset = read.csv(file="/Users/jan-philippviefhues/Desktop/UNI/Maastricht/um/Thesis/gitRepo/masterthesis/cleaned_data/total_dataset_with_precipitation_and_dummies_hourly.csv")
before.dataset.without_date <- before.dataset[, !names(before.dataset) %in% c("Date", "X")]
during.dataset.without_date <- during.dataset[, !names(during.dataset) %in% c("Date", "X")]
after.dataset.without_date <- after.dataset[, !names(after.dataset) %in% c("Date", "X")]
total.dataset.without_date <- total.dataset[, !names(total.dataset) %in% c("Date", "X")]
relevant.features <- c("CO2","PM25","PM10","Temperature", "Humidity", "Pressure","Precipitation","RhineWaterLevel","Discharge","Stream_water_level","ground_water_level","mine_water_level")
before.dataset.correlation_matrix <- cor(before.dataset.without_date[relevant.features], y = NULL,
method = c("spearman"))
corrplot::corrplot(before.dataset.correlation_matrix, method = 'number')
renamed.data=  total.dataset.without_date[relevant.features]
renamed.data = colnames(renamed.data) <- c('CO2', 'PM2.5', 'PM10', 'Temperature', 'Humidity', 'Pressure', 'Precipitation', 'Rhein water level', 'Discharge', 'Stream water level', 'Ground water level', 'Mine water level')
before.dataset.correlation_matrix <- cor(renamed.data, y = NULL,
method = c("spearman"))
renamed.data =  total.dataset.without_date[relevant.features]
colnames(renamed.data) <- c('CO2', 'PM2.5', 'PM10', 'Temperature', 'Humidity', 'Pressure', 'Precipitation', 'Rhein water level', 'Discharge', 'Stream water level', 'Ground water level', 'Mine water level')
before.dataset.correlation_matrix <- cor(renamed.data, y = NULL,
method = c("spearman"))
corrplot::corrplot(before.dataset.correlation_matrix, method = 'number')
print(rename_features(total.dataset, relevant.features))
rename_features <- function (dataset, features){
data = dataset[features]
colnames(data) <- c('CO2', 'PM2.5', 'PM10', 'Temperature', 'Humidity', 'Pressure', 'Precipitation', 'Rhein water level', 'Discharge', 'Stream water level', 'Ground water level', 'Mine water level')
return(data)
}
print(rename_features(total.dataset, relevant.features))
before.dataset.correlation_matrix <- cor(rename_features(before.dataset.without_date, relevant.features), y = NULL,
method = c("spearman"))
corrplot::corrplot(before.dataset.correlation_matrix, method = 'number')
during.dataset.correlation_matrix <- cor(rename_features(during.dataset.without_date, relevant.features), y = NULL,
method = c("spearman"))
corrplot::corrplot(during.dataset.correlation_matrix, method = 'number')
after.dataset.correlation_matrix <- cor(rename_features(after.dataset.without_date, relevant.features), y = NULL,
method = c("spearman"))
corrplot::corrplot(after.dataset.correlation_matrix, method = 'number')
hist(before.dataset$Humidity)
hist(before.dataset$Humidity, main='Humidity before flood')
hist(before.dataset$Humidity, main='Humidity before flood', xlab='Humidity')
ggplot(total.dataset, aes(x=periode, y=RhineWaterLevel, fill=periode)) + geom_boxplot()
ggplot2.histogram(data=total.dataset, xName='Humidity',
groupName='periode', legendPosition="top")
ggplot2.histogram(data=total.dataset, xName='Humidity',
groupName='periode', legendPosition="top",
alpha=0.5 )
ggplot2.histogram(data=total.dataset, xName='Humidity',
groupName='periode', legendPosition="top",
alpha=0.5,
meanLineColor="white", meanLineSize=1.5)
library(car)
install.packages("devtools")
library(devtools)
devtools::install_github("kassambara/easyGgplot2")
library(easyGgplot2)
devtools::install_github("matherion/userfriendlyscience", dependencies=TRUE)
library(userfriendlyscience)
install.packages("devtools")
ggplot(total.dataset, aes(x=periode, y=Humidity, fill=periode)) + geom_boxplot()
dev.off()
ggplot2.histogram(data=total.dataset, xName='Humidity',
groupName='periode', legendPosition="top")
ggplot(total.dataset, aes(x=periode, y=Humidity, fill=periode)) + geom_boxplot()
library(easyGgplot2)
ggplot(total.dataset, aes(x=periode, y=Humidity, fill=periode)) + geom_boxplot()
ggplot2.histogram(data=total.dataset, xName='Humidity',
groupName='periode', legendPosition="top")
ggplot2.histogram(data=total.dataset.oneWeekEach, xName='Humidity',
groupName='periode', legendPosition="top")
ggplot2.histogram(data=total.dataset.oneWeekEach, xName='Humidity',
groupName='periode', legendPosition="top",
alpha=0.5 )
ggplot2.histogram(data=total.dataset.oneWeekEach, xName='Humidity',
groupName='periode', legendPosition="top",
alpha=0.5,
meanLineColor="white", meanLineSize=1.5)
before.dataset.hist <- hist(before.dataset$CO2)
during.dataset.hist <- hist(during.dataset$CO2)
after.dataset.hist <- hist(after.dataset$CO2)
before.dataset.hist <- hist(before.dataset$CO2, main='CO2 before flood')
before.dataset.hist <- hist(before.dataset$CO2, main='CO2 before flood', x_axis='CO2')
before.dataset.hist <- hist(before.dataset$CO2, main='CO2 before flood', xlab='CO2')
before.dataset.hist <- hist(before.dataset$CO2, main='CO2 before flood', xlab='CO2')
during.dataset.hist <- hist(during.dataset$CO2, main='CO2 during flood',xlab='CO2')
after.dataset.hist <- hist(after.dataset$CO2, main='CO2 after flood',xlab='CO2')
ggplot2.histogram(data=total.dataset, xName='CO2',
groupName='periode', legendPosition="top")
before.dataset.hist <- hist(before.dataset$CO2, main='CO2 before flood', xlab='CO2')
during.dataset.hist <- hist(during.dataset$CO2, main='CO2 during flood',xlab='CO2')
after.dataset.hist <- hist(after.dataset$CO2, main='CO2 after flood',xlab='CO2')
